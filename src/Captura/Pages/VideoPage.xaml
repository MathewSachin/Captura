<Page x:Class="Captura.VideoPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
      xmlns:models="clr-namespace:Captura.Models;assembly=Captura.Core"
      xmlns:screna="clr-namespace:Captura.Models;assembly=Screna"
      xmlns:ffmpeg="clr-namespace:Captura.Models;assembly=Captura.FFmpeg"
      xmlns:sharpavi="clr-namespace:Captura.Models;assembly=Captura.SharpAvi"
      Title="Video">
    <Grid>
        <Grid.Resources>
            <Style TargetType="Path" x:Key="VideoSourceIcon" BasedOn="{StaticResource {x:Type Path}}">
                <Setter Property="Width" Value="20"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Stretch" Value="Uniform"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Fill" Value="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=ContentControl}}"/>
            </Style>
        </Grid.Resources>
        <StackPanel DataContext="{Binding MainViewModel, Source={StaticResource ServiceLocator}}"
                    Margin="5,0,0,0">
            <DockPanel Margin="0,0,0,5">
                <Button Content="{Binding Preview, Source={StaticResource Loc}, Mode=OneWay}"
                        DockPanel.Dock="Right"
                        Command="{Binding ShowPreviewCommand}"
                        Padding="10,0"/>

                <Label Content="{Binding VideoSource, Source={StaticResource Loc}, Mode=OneWay}"
                       FontWeight="Bold"/>
            </DockPanel>
            
            <Border BorderThickness="0.5"
                    BorderBrush="{DynamicResource ModernButtonBorder}"
                    Padding="5,2"
                    Margin="0,2">
                <StackPanel Orientation="Horizontal">
                    <Label Content="{Binding VideoViewModel.SelectedVideoSourceKind.Name}"/>
                    <Label Content="-"
                           Visibility="{Binding VideoViewModel.SelectedVideoSourceKind.Source.Name, Converter={StaticResource NotNullConverter}}"
                           Margin="5,0"/>
                    <Label Content="{Binding VideoViewModel.SelectedVideoSourceKind.Source.Name, TargetNullValue='No Source Selected', FallbackValue='No Source Selected'}"
                           Visibility="{Binding VideoViewModel.SelectedVideoSourceKind.Source.Name, Converter={StaticResource NotNullConverter}}"/>
                </StackPanel>
            </Border>

            <ListView Margin="0,5"
                      IsEnabled="{Binding RecordingViewModel.RecorderState, Converter={StaticResource NotRecordingConverter}}"
                      ItemsSource="{Binding VideoViewModel.VideoSources}"
                      SelectedValuePath="Provider"
                      SelectedValue="{Binding VideoViewModel.SelectedVideoSourceKind, Mode=TwoWay}"
                      BorderThickness="0.4">
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Rows="1"/>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid Background="#01000000">
                            <Grid.ToolTip>
                                <StackPanel MinWidth="200">
                                    <TextBlock Text="{Binding Name, Mode=OneWay}"
                                               FontWeight="Bold"/>

                                    <TextBlock Text="{Binding Description, Mode=OneWay}"/>
                                </StackPanel>
                            </Grid.ToolTip>
                            <Path Data="{Binding IconResourceKey, Converter={StaticResource StaticResourceConverter}}"
                                  Style="{StaticResource VideoSourceIcon}"/>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <DockPanel Margin="0,5">
                <Label Content="Audio Format"
                       Margin="0,0,5,0"/>

                <ComboBox ItemsSource="{Binding VideoViewModel.NoVideoSourceProvider.Sources}"
                          SelectedValue="{Binding VideoViewModel.NoVideoSourceProvider.SelectedSource, Mode=TwoWay}"
                          IsEnabled="{Binding RecordingViewModel.RecorderState, Converter={StaticResource NotRecordingConverter}}"/>
                
                <DockPanel.Style>
                    <Style TargetType="DockPanel">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding VideoViewModel.SelectedVideoSourceKind, Converter={StaticResource GetTypeConverter}}" Value="{x:Type models:NoVideoSourceProvider}">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DockPanel.Style>
            </DockPanel>

            <Label Content="{Binding VideoEncoder, Source={StaticResource Loc}, Mode=OneWay}"
                   FontWeight="Bold"
                   Margin="0,5"/>

            <Grid Margin="0,5"
                  IsEnabled="{Binding RecordingViewModel.RecorderState, Converter={StaticResource NotRecordingConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <xctk:SplitButton Content="FFmpeg"
                                  Padding="10"
                                  Command="{Binding VideoViewModel.SetWriterCommand}"
                                  CommandParameter="{x:Type ffmpeg:FFmpegWriterProvider}">
                    <xctk:SplitButton.DropDownContent>
                        <Frame Source="FFmpegPage.xaml"/>
                    </xctk:SplitButton.DropDownContent>
                    <xctk:SplitButton.Style>
                        <Style TargetType="xctk:SplitButton" BasedOn="{StaticResource {x:Type xctk:SplitButton}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding VideoViewModel.SelectedVideoWriterKind, Converter={StaticResource GetTypeConverter}}" Value="{x:Type ffmpeg:FFmpegWriterProvider}">
                                    <Setter Property="Foreground" Value="{DynamicResource Accent}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </xctk:SplitButton.Style>
                </xctk:SplitButton>

                <Button Content="GIF"
                                  Grid.Column="1"
                                  Margin="5,0"
                                  Padding="10"
                                  Command="{Binding VideoViewModel.SetWriterCommand}"
                                  CommandParameter="{x:Type screna:GifWriterProvider}">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding VideoViewModel.SelectedVideoWriterKind, Converter={StaticResource GetTypeConverter}}" Value="{x:Type screna:GifWriterProvider}">
                                    <Setter Property="Foreground" Value="{DynamicResource Accent}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button Content="SharpAvi"
                        Padding="10"
                        Grid.Column="2"
                        Command="{Binding VideoViewModel.SetWriterCommand}"
                        CommandParameter="{x:Type sharpavi:SharpAviWriterProvider}">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding VideoViewModel.SelectedVideoWriterKind, Converter={StaticResource GetTypeConverter}}" Value="{x:Type sharpavi:SharpAviWriterProvider}">
                                    <Setter Property="Foreground" Value="{DynamicResource Accent}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <xctk:SplitButton Content="Stream"
                                  Padding="10"
                                  ToolTip="Alpha Feature"
                                  Margin="5,0"
                                  Grid.Column="3"
                                  Command="{Binding VideoViewModel.SetWriterCommand}"
                                  CommandParameter="{x:Type ffmpeg:StreamingWriterProvider}">
                    <xctk:SplitButton.DropDownContent>
                        <Grid Margin="10">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*" MinWidth="200"/>
                            </Grid.ColumnDefinitions>

                            <Path Data="{StaticResource IconTwitch}"
                                  Width="15"
                                  Height="15"
                                  Margin="0,0,10,0"
                                  Stretch="Uniform"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                            <Label Content="Twitch Key"
                                   ContentStringFormat="{}{0}: "
                                   Grid.Column="1"/>    
                            <TextBox Grid.Column="2"
                                     Margin="2"
                                     Text="{Binding Settings.FFmpeg.TwitchKey}"/>

                            <Path Data="{StaticResource IconYouTube}"
                                  Grid.Row="1"
                                  Width="15"
                                  Height="15"
                                  Margin="0,0,10,0"
                                  Stretch="Uniform"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                            <Label Content="YouTube Live Key"
                                   Grid.Row="1"
                                   Grid.Column="1"
                                   ContentStringFormat="{}{0}: "/>
                            <TextBox Grid.Column="2"
                                     Grid.Row="1"
                                     Margin="2"
                                     Text="{Binding Settings.FFmpeg.YouTubeLiveKey}"/>

                            <Path Data="{StaticResource IconWeb}"
                                  Grid.Row="2"
                                  Width="15"
                                  Height="15"
                                  Margin="0,0,10,0"
                                  Stretch="Uniform"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                            <Label Content="Custom Url"
                                   Grid.Column="1"
                                   Grid.Row="2"
                                   ContentStringFormat="{}{0}:"/>
                            <TextBox Grid.Row="2"
                                     Grid.Column="2"
                                     Margin="2"
                                     Text="{Binding Settings.FFmpeg.CustomStreamingUrl}"/>
                        </Grid>
                    </xctk:SplitButton.DropDownContent>
                    <xctk:SplitButton.Style>
                        <Style TargetType="xctk:SplitButton" BasedOn="{StaticResource {x:Type xctk:SplitButton}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding VideoViewModel.SelectedVideoWriterKind, Converter={StaticResource GetTypeConverter}}" Value="{x:Type ffmpeg:StreamingWriterProvider}">
                                    <Setter Property="Foreground" Value="{DynamicResource Accent}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </xctk:SplitButton.Style>
                </xctk:SplitButton>

                <Button Content="Discard"
                        Padding="10"
                        Grid.Column="4"
                        Command="{Binding VideoViewModel.SetWriterCommand}"
                        CommandParameter="{x:Type models:DiscardWriterProvider}">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding VideoViewModel.SelectedVideoWriterKind, Converter={StaticResource GetTypeConverter}}" Value="{x:Type models:DiscardWriterProvider}">
                                    <Setter Property="Foreground" Value="{DynamicResource Accent}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>

            <ComboBox VerticalAlignment="Center"
                      Margin="0,5"
                      ItemsSource="{Binding VideoViewModel.AvailableVideoWriters}" 
                      SelectedValue="{Binding VideoViewModel.SelectedVideoWriter, Mode=TwoWay}"
                      IsEnabled="{Binding RecordingViewModel.RecorderState, Converter={StaticResource NotRecordingConverter}}">
                <ComboBox.Style>
                    <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding VideoViewModel.SelectedVideoWriterKind, Converter={StaticResource GetTypeConverter}}" Value="{x:Type screna:GifWriterProvider}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding VideoViewModel.SelectedVideoWriterKind, Converter={StaticResource GetTypeConverter}}" Value="{x:Type models:DiscardWriterProvider}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>

            <CheckBox Margin="0,5"
                      Content="{Binding VarFrameRate, Source={StaticResource Loc}, Mode=OneWay}"
                      IsChecked="{Binding Settings.Gif.VariableFrameRate, Mode=TwoWay}">
                <CheckBox.Style>
                    <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding VideoViewModel.SelectedVideoWriterKind, Converter={StaticResource GetTypeConverter}}" Value="{x:Type screna:GifWriterProvider}">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </CheckBox.Style>
            </CheckBox>

            <Grid Margin="0,5"
                  IsEnabled="{Binding RecordingViewModel.RecorderState, Converter={StaticResource NotRecordingConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Label Content="FPS"
                       ContentStringFormat="{}{0}:"/>
                <Label Content="{Binding Settings.Video.FrameRate}"
                       Margin="5,0"
                       MinWidth="15"
                       ContentStringFormat="{}{0:N0}"
                       HorizontalContentAlignment="Right"
                       Visibility="{Binding Settings.Video.FpsLimit, Converter={StaticResource BoolToVisibilityConverter}}"
                       Grid.Column="1"/>
                
                <Slider Minimum="1"
                        Maximum="30"
                        SelectionStart="8"
                        SelectionEnd="12"
                        IsSelectionRangeEnabled="True"
                        Value="{Binding Settings.Video.FrameRate}"
                        Interval="1"
                        Visibility="{Binding Settings.Video.FpsLimit, Converter={StaticResource BoolToVisibilityConverter}}"
                        Grid.Column="2"/>
                <xctk:IntegerUpDown Visibility="{Binding Settings.Video.FpsLimit, Converter={StaticResource NegatingConverter}}"
                                    Margin="10,0,0,0"
                                    Minimum="1"
                                    Maximum="120"
                                    Value="{Binding Settings.Video.FrameRate}"
                                    Grid.Column="2"/>

                <CheckBox IsChecked="{Binding Settings.Video.FpsLimit}"
                          Content="Limit"
                          Margin="5,0,0,0"
                          Grid.Column="3"/>

                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding VideoViewModel.SelectedVideoWriterKind, Converter={StaticResource GetTypeConverter}}" Value="{x:Type screna:GifWriterProvider}"/>
                                    <Condition Binding="{Binding Settings.Gif.VariableFrameRate}" Value="True"/>
                                </MultiDataTrigger.Conditions>

                                <Setter Property="Visibility" Value="Collapsed"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
            </Grid>

            <DockPanel Margin="0,5"
                       IsEnabled="{Binding RecordingViewModel.RecorderState, Converter={StaticResource NotRecordingConverter}}">
                <Label Content="{Binding Quality, Source={StaticResource Loc}, Mode=OneWay}"
                       ContentStringFormat="{}{0}:"/>
                <Label Content="{Binding Settings.Video.Quality}"
                       ContentStringFormat="{}{0:N0}%"
                       Margin="5,0"
                       MinWidth="30"
                       HorizontalContentAlignment="Right"/>
                <Slider Minimum="1" 
                        Maximum="100"
                        SelectionStart="60"
                        SelectionEnd="80"
                        IsSelectionRangeEnabled="True"
                        Value="{Binding Settings.Video.Quality}"/>

                <DockPanel.Style>
                    <Style TargetType="DockPanel">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding VideoViewModel.SelectedVideoWriterKind, Converter={StaticResource GetTypeConverter}}" Value="{x:Type screna:GifWriterProvider}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding VideoViewModel.SelectedVideoWriterKind, Converter={StaticResource GetTypeConverter}}" Value="{x:Type models:DiscardWriterProvider}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DockPanel.Style>
            </DockPanel>

            <Grid Margin="0,5">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="15"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Label Content="{Binding WebCam, Source={StaticResource Loc}, Mode=OneWay}"
                       FontWeight="Bold"
                       Margin="0,5"/>

                <xctk:DropDownButton ToolTip="{Binding WebCam, Source={StaticResource Loc}, Mode=OneWay}"
                                     Padding="5"
                                     Grid.Row="1"
                                     HorizontalAlignment="Left">
                    <Path Style="{StaticResource VideoSourceIcon}"
                          Data="{StaticResource IconWebcam}"/>

                    <xctk:DropDownButton.DropDownContent>
                        <StackPanel Margin="10" MinWidth="250">
                            <Label Margin="0,3"
                                   Content="{Binding WebCam, Source={StaticResource Loc}, Mode=OneWay}"
                                   FontWeight="Bold"/>

                            <DockPanel Margin="0,5">
                                <Path Data="{StaticResource IconWebcam}"
                                      Width="15"
                                      Height="15"
                                      Margin="0,0,7,0"
                                      Stretch="Uniform"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      ToolTip="{Binding WebCam, Source={StaticResource Loc}, Mode=OneWay}"/>

                                <Button Content="{Binding Preview, Source={StaticResource Loc}, Mode=OneWay}"
                                        DockPanel.Dock="Right"
                                        Click="Preview_Click"
                                        Padding="10,0"
                                        Margin="3,0"/>

                                <ComboBox ItemsSource="{Binding WebCamProvider.AvailableCams}"
                                          SelectedItem="{Binding WebCamProvider.SelectedCam, Mode=TwoWay}"
                                          IsEnabled="{Binding RecordingViewModel.CanChangeWebcam}"
                                          DisplayMemberPath="Name"/>
                            </DockPanel>

                            <CheckBox IsChecked="{Binding Settings.WebcamOverlay.SeparateFile}"
                                      Content="Record Webcam to separate file"
                                      Margin="0,5"/>
                        </StackPanel>
                    </xctk:DropDownButton.DropDownContent>
                </xctk:DropDownButton>

                <Label Content="{Binding Audio, Source={StaticResource Loc}, Mode=OneWay}"
                       FontWeight="Bold"
                       Margin="0,5"
                       Grid.Column="2"/>

                <xctk:DropDownButton ToolTip="{Binding Audio, Source={StaticResource Loc}, Mode=OneWay}"
                                     Padding="5"
                                     Grid.Column="2"
                                     Grid.Row="1"
                                     HorizontalAlignment="Left">
                    <Path Data="{StaticResource IconMic}">
                        <Path.Style>
                            <Style TargetType="Path" BasedOn="{StaticResource VideoSourceIcon}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Settings.Audio.Enabled}" Value="True">
                                        <Setter Property="Fill" Value="{DynamicResource Accent}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Path.Style>
                    </Path>

                    <xctk:DropDownButton.DropDownContent>
                        <Frame Source="AudioPage.xaml"
                               Margin="10"/>
                    </xctk:DropDownButton.DropDownContent>
                </xctk:DropDownButton>
            </Grid>
        </StackPanel>
    </Grid>
</Page>
