<Fluent:RibbonWindow x:Class="Captura.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:this="clr-namespace:Captura" ResizeMode="CanMinimize"
        xmlns:Fluent="clr-namespace:Fluent;assembly=Fluent"
        Title="Captura" Width="525" Height="400"
        Closing="Window_Closing" Icon="Images/Captura.ico">
    <Fluent:RibbonWindow.TaskbarItemInfo>
        <TaskbarItemInfo>
            <TaskbarItemInfo.ThumbButtonInfos>
                <ThumbButtonInfo x:Name="RecordThumb" Description="Record" Click="ToggleRecorderState" ImageSource="Images/Record.png"/>
            </TaskbarItemInfo.ThumbButtonInfos>
        </TaskbarItemInfo>
    </Fluent:RibbonWindow.TaskbarItemInfo>
    <Fluent:RibbonWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Fluent;Component/Themes/Office2013/Generic.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Color x:Key="{x:Static Fluent:MetroColors.ThemeColorKey}">
                Chocolate
            </Color>
        </ResourceDictionary>
    </Fluent:RibbonWindow.Resources>
    <DockPanel>
        <Fluent:Ribbon AutomaticStateManagement="True" DockPanel.Dock="Top">
            <Fluent:Ribbon.Menu>
                <Fluent:Backstage>
                    <Fluent:BackstageTabControl>
                        <Fluent:Button Header="Last" Command="PreviousPage"/>
                        <Fluent:BackstageTabItem Header="About" KeyTip="A">
                            <StackPanel Margin="5">
                                <Label Content="Captura" FontSize="18" Foreground="DarkBlue"/>
                                <Label Content="(c) Mathew Sachin. All Rights Reserved" 
                                               FontFamily="Comic Sans MS" FontSize="12"/>
                            </StackPanel>
                        </Fluent:BackstageTabItem>
                        <Fluent:Button Header="Exit" KeyTip="X" Command="Close"/>
                    </Fluent:BackstageTabControl>
                </Fluent:Backstage>
            </Fluent:Ribbon.Menu>

            <Fluent:RibbonTabItem Header="Home">
                <Fluent:RibbonGroupBox>
                    <Fluent:ToggleButton Icon="Images/Minimize.ico" Size="Middle" Margin="0,5" IsEnabled="{Binding ReadyToRecord}"
                                         Header="Minimise On Capture Start" x:Name="MinOnStart" 
                                         IsChecked="{Binding Source={StaticResource Settings}, Path=Default.MinimizeOnStart}"/>
                    <Fluent:Button Header="Refresh" Command="Refresh" Size="Middle" Icon="Images/Refresh.ico"/>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="Window">
                    <Fluent:InRibbonGallery MaxItemsInRow="1" MaxItemsInDropDownRow="1" Width="330" 
                                  ItemWidth="{Binding Width}" ItemsSource="{Binding AvailableWindows}"
                                  IsEnabled="{Binding ReadyToRecord}" DisplayMemberPath="Value" SelectedValuePath="Key"
                                  Name="WindowsGallery" SelectionChanged="WindowsGallery_SelectionChanged"
                                  SelectedValue="{Binding SelectedWindow, Mode=TwoWay}"/>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>

            <Fluent:RibbonTabItem Header="Audio">
                <Fluent:RibbonGroupBox Header="Devices">
                    <Fluent:InRibbonGallery MaxItemsInRow="1" MaxItemsInDropDownRow="1" 
                                  Width="300" ItemWidth="{Binding Width}"
                                  ItemsSource="{Binding AvailableAudioSources}"
                                  DisplayMemberPath="Value" IsEnabled="{Binding ReadyToRecord}" Name="DevicesGallery"
                                  SelectionChanged="DevicesGallery_SelectionChanged"
                                  SelectedValuePath="Key" SelectedValue="{Binding SelectedAudioSourceIndex, Mode=TwoWay}"/>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox>
                    <Fluent:ToggleButton Header="Stereo" Size="Middle" Name="UseStereo" IsEnabled="{Binding ReadyToRecord}"
                                         IsChecked="{Binding Source={StaticResource Settings}, Path=Default.UseStereo}"/>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="MP3 Encoding">
                    <Fluent:ToggleButton Size="Middle" Header="Encode" IsEnabled="{Binding ReadyToRecord}"
                                         IsChecked="{Binding Source={StaticResource Settings}, Path=Default.EncodeAudio}"
                                         VerticalAlignment="Center" Name="EncodeAudio"/>
                    <Slider Name="AudioQuality" IsEnabled="{Binding ReadyToRecord}"
                            IsSnapToTickEnabled="True" TickFrequency="1" SmallChange="1" LargeChange="1"
                            AutoToolTipPlacement="None" Width="100" Margin="7,0"/>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>

            <Fluent:RibbonTabItem Header="Video">
                <Fluent:RibbonGroupBox>
                    <Fluent:Spinner Header="Frame Rate" IsEnabled="{Binding ReadyToRecord}" Margin="0,5" x:Name="FrameRate" Value="10" Minimum="1" Maximum="30"/>
                    <Fluent:Spinner Minimum="1" Maximum="100" IsEnabled="{Binding ReadyToRecord}" Header="Quality" Value="70" Name="Quality"/>
                    <Fluent:ToggleButton Header="Include Cursor" Size="Large" LargeIcon="Images/Cursor.ico" IsEnabled="{Binding ReadyToRecord}"
                                         IsChecked="{Binding Source={StaticResource Settings}, Path=Default.IncludeCursor}"
                                         Icon="Images/Cursor.ico" Margin="3,0" x:Name="IncludeCursor"/>
                </Fluent:RibbonGroupBox>

                <Fluent:RibbonGroupBox Header="Encoder">
                    <Fluent:InRibbonGallery MaxItemsInRow="1" MaxItemsInDropDownRow="1" 
                                  Width="320" ItemWidth="{Binding Width}" ItemsSource="{Binding AvailableCodecs}"
                                  SelectedValuePath="Codec" IsEnabled="{Binding ReadyToRecord}" Name="EncodersGallery"
                                  DisplayMemberPath="Name" SelectionChanged="EncodersGallery_SelectionChanged"
                                  SelectedValue="{Binding Encoder, Mode=TwoWay}"/>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
        </Fluent:Ribbon>

        <Fluent:StatusBar DockPanel.Dock="Bottom" Visibility="Visible">
            <Fluent:StatusBarItem HorizontalAlignment="Right">
                <this:Timer x:Name="TimeManager" VerticalContentAlignment="Center" Width="40" Foreground="White" HorizontalContentAlignment="Center"/>
            </Fluent:StatusBarItem>
            <Fluent:StatusBarItem HorizontalAlignment="Left">
                <Label Height="25" Name="Status" Content="Ready" Foreground="White" VerticalContentAlignment="Center" Background="Transparent" />
            </Fluent:StatusBarItem>
            <Fluent:StatusBar.ContextMenu>
                <ContextMenu/>
            </Fluent:StatusBar.ContextMenu>
        </Fluent:StatusBar>

        <DockPanel DockPanel.Dock="Bottom">
            <Button Content="..." Width="25" DockPanel.Dock="Right" Background="White" Command="Open" />
            <Label Content="Output Path" DockPanel.Dock="Left" BorderThickness="0.5" BorderBrush="#B7000000" 
                   VerticalContentAlignment="Center"/>
            <TextBox x:Name="OutPath" IsReadOnly="True" VerticalContentAlignment="Center"
                     Text="{Binding Source={StaticResource Settings}, Path=Default.OutputPath}"/>            
        </DockPanel>

        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
            <StackPanel.Resources>
                <ControlTemplate x:Key="ImageButtonTemplate" TargetType="{x:Type Button}">
                    <Grid x:Name="Grid" Height="{Binding Height, RelativeSource={RelativeSource TemplatedParent}}" 
                                Width="{Binding Height, RelativeSource={RelativeSource TemplatedParent}}">
                        <Image Margin="5" x:Name="ButtonImage" Opacity="0.6" 
                                       Source="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" 
                                        ToolTip="{TemplateBinding ToolTip}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="ButtonImage" Property="Opacity" Value="0.8" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="ButtonImage" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ButtonImage" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

                <Style TargetType="Button">
                    <Setter Property="Height" Value="60"/>
                    <Setter Property="Template" Value="{StaticResource ImageButtonTemplate}"/>
                </Style>
            </StackPanel.Resources>

            <Button Content="Images/ScreenShot.ico" Height="40" Width="40" ToolTip="ScreenShot" Click="ScreenShot" />

            <Button Content="Images/Record.png" ToolTip="Record" Name="RecordButton" Click="ToggleRecorderState"/>

            <Button Content="Images/Pause.png" Name="PauseButton" Command="this:MainWindow.PauseCommand">
                <Button.LayoutTransform>
                    <RotateTransform x:Name="RotationEffect" Angle="0"/>
                </Button.LayoutTransform>
            </Button>
        </StackPanel>
    </DockPanel>
</Fluent:RibbonWindow>